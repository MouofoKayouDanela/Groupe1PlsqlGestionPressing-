SUPPRESSION D'UTILISATEUR POTENTIELLEMENT EXISTANT

Utilisateur supprimé.

*************** Creation utilisateur ***************

Utilisateur créé.


Utilisateur modifié.


Utilisateur modifié.


Autorisation de privilèges (GRANT) acceptée.


Autorisation de privilèges (GRANT) acceptée.

***************************************************************************************************
Connecté.

Autorisation de privilèges (GRANT) acceptée.

Connecté.
DROP TABLE Administrateur CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Agence CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Agent CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Annonce CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Besoin CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Categorie_Linge CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Categorie_Service CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Client CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Commande CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Details_Besoin CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Linge CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Linge_Agence CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Message CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Offre CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Pays CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Pressing CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Promotion CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Proprietaire CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Quartier CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Role CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Service CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Service_Agence CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Type_Linge CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Type_Service CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Utilisateur CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


DROP TABLE Ville CASCADE CONSTRAINTS
           *
ERREUR à la ligne 1 :
ORA-00942: Table ou vue inexistante


CREATION DES TABLES
Administrateur

Table créée.

Agence

Table créée.

Agent

Table créée.

Annonce

Table créée.

Besoin

Table créée.

Categorie_Linge

Table créée.

Categorie_Service

Table créée.

Client

Table créée.

Commande

Table créée.

Details_Besoin

Table créée.

Linge_Agence

Table créée.

Linge

Table créée.

Message

Table créée.

Offre

Table créée.

Pays

Table créée.

Pressing

Table créée.

Promotion

Table créée.

Proprietaire

Table créée.

Quartier

Table créée.

Role

Table créée.

Service_Agence

Table créée.

Service

Table créée.

Type_Linge

Table créée.

Type_Service

Table créée.

Utilisateur

Table créée.

Ville

Table créée.

CREATION DES DIFFERENTES CONTRAINTES
CREATION DES CONTRAINTES DE VALEURS OBLIGATOIRES

Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.

CREATION DES CONTRAINTES DE VALEURS UNIQUES

Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.

CREATION DES CONTRAINTES DES VALEURS DE DOMAINE

Table modifiée.


Table modifiée.

CREATION DES CONTRAINTES DE CLES PRIMAIRES

Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.

CREATION DES CONTRAINTES DE CLES ETRANGERES

Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.


Table modifiée.

DROP SEQUENCE seq_agence
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_annonce
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_besoin
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_categorie_linge
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_categorie_service
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_commande
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_pays
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_pressing
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_promotion
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_quartier
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_role
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_type_linge
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_type_service
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_utilisateur
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


DROP SEQUENCE seq_ville
              *
ERREUR à la ligne 1 :
ORA-02289: la séquence n'existe pas


CREATION DES OBJETS SEQUENCES DE TOUTES LES TABLES ELEMENTAIRES

Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.


Séquence créée.

INSERTION DES DONNEES STATIQUES
de la table utilisateur

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table administtrateur

1 ligne créée.

de la table proprietaire

1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table pressing

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table pays

1 ligne créée.

de la table ville

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table quartier

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table role

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table agence

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table agent

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table type_linge

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table categorie_linge

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table linge

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table type_Service

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table Categorie_Service

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table service

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table Linge_Agence

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table Service_Agence

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table annonce

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table offre

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table promotion
de la table client

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table besoin

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table Details_Besoin

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table message

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

de la table commande

1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.


1 ligne créée.

SQL> CREATE OR REPLACE PACKAGE trans_data AUTHID DEFINER AS
  2    TYPE TimeRec IS RECORD (
  3      minutes SMALLINT,
  4      hours   SMALLINT);
  5    TYPE TransRec IS RECORD (
  6      category VARCHAR2(10),
  7      account  INT,
  8      amount   REAL,
  9      time_of  TimeRec);
 10    minimum_balance     CONSTANT REAL := 10.00;
 11    number_processed    INT;
 12    insufficient_funds  EXCEPTION;
 13    PRAGMA EXCEPTION_INIT(insufficient_funds, -4097);
 14  END trans_data;
 15  /

Package créé.

SQL> 
SQL> 
SQL> \
SP2-0042: commande inconnue "\" - reste de la ligne ignoré.
SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL>  SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  (SELECT nom_ville
  6                                  FROM VILLE;
                                (SELECT nom_ville
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL>                                 JOIN Pays
SP2-0042: commande inconnue "JOIN Pays" - reste de la ligne ignoré.
SQL>                                 ON (Vi.nom_pays= Pa.nom)
SP2-0734: commande inconnue au début de "ON (Vi.nom..." - le reste de la ligne est ignoré.
SQL>                                 WHERE (Pa.nom = Valeur_pays));
SP2-0734: commande inconnue au début de "WHERE (Pa...." - le reste de la ligne est ignoré.
SQL> 
SQL>  SELECT id_ville, nom_quartier
  2              INTO Valeur_ville
  3              FROM VILLE
  4              WHERE nom_ville = nom_ville
  5                                  (SELECT nom_quartier
  6                                  FROM QUARTIER
  7                                  JOIN VILLE
  8                                  ON (Qu.nom_ville = Vi.nom)
  9                                  WHERE(Vi.no = Valeur_ville));
                                (SELECT nom_quartier
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL>  SELECT id_ville, nom_quartier
  2              INTO Valeur_ville
  3              FROM VILLE
  4              WHERE nom_ville = nom_ville
  5                                  (SELECT nom_quartier,
  6                                  FROM QUARTIER
  7                                  JOIN VILLE
  8                                  ON (Qu.nom_ville = Vi.nom)
  9                                  WHERE(Vi.no = Valeur_ville));
                                (SELECT nom_quartier,
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  (SELECT nom_ville
  6                                  FROM VILLE;
                                (SELECT nom_ville
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL>                                 JOIN Pays
SP2-0042: commande inconnue "JOIN Pays" - reste de la ligne ignoré.
SQL>                                 ON (Vi.nom_pays= Pa.nom)
SP2-0734: commande inconnue au début de "ON (Vi.nom..." - le reste de la ligne est ignoré.
SQL>                                 WHERE (Pa.nom = Valeur_pays));
SP2-0734: commande inconnue au début de "WHERE (Pa...." - le reste de la ligne est ignoré.
SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  (SELECT nom_ville
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays));
                                (SELECT nom_ville
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  (SELECT nom_ville, id_pays
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays));
                                (SELECT nom_ville, id_pays
                                 *
ERREUR à la ligne 5 :
ORA-00936: expression absente


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  SELECT nom_ville
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays);
                                SELECT nom_ville
                                *
ERREUR à la ligne 5 :
ORA-00933: la commande SQL ne se termine pas correctement


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom_pays = nom_pays
  5                                  ((SELECT nom_ville
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays)));
            WHERE nom_pays = nom_pays
                             *
ERREUR à la ligne 4 :
ORA-00904: "NOM_PAYS" : identificateur non valide


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE nom = nom
  5                                  ((SELECT nom_ville
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays)));
            WHERE nom = nom
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM" : identificateur non valide


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE Nom = Nom
  5                                  ((SELECT nom_ville
  6                                  FROM VILLE
  7                                  JOIN Pays
  8                                  ON (Vi.nom_pays= Pa.nom)
  9                                  WHERE (Pa.nom = Valeur_pays)));
            WHERE Nom = Nom
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM" : identificateur non valide


SQL> SELECT id_pays, nom_ville
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE Nom = Nom
  5                          ((SELECT nom_ville
  6                          FROM VILLE
  7                          JOIN Pays
  8                          ON (Vi.nom_pays= Pa.nom)
  9                          WHERE (Pa.nom = Valeur_pays)));
            WHERE Nom = Nom
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM" : identificateur non valide


SQL> SELECT id_pays, Nom
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE Nom = Nom
  5                          ((SELECT Nom
  6                          FROM VILLE
  7                          JOIN Pays
  8                          ON (Vi.Nom= Pa.Nom)
  9                          WHERE (Pa.Nom = Valeur_pays)));
            WHERE Nom = Nom
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM" : identificateur non valide


SQL> SELECT id_pays, Nom
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE Nom = Nom_Pays
  5                          ((SELECT Nom
  6                          FROM VILLE
  7                          JOIN Pays
  8                          ON (Vi.Nom= Pa.Nom)
  9                          WHERE (Pa.Nom = Valeur_pays)));
            WHERE Nom = Nom_Pays
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM_PAYS" : identificateur non valide


SQL> SELECT id_pays, Nom
  2              INTO Valeur_pays
  3              FROM Pays
  4              WHERE Nom = Nom
  5                          ((SELECT Nom
  6                          FROM VILLE
  7                          JOIN Pays
  8                          ON (Vi.Nom= Pa.Nom)
  9                          WHERE (Pa.Nom = Valeur_pays)));
            WHERE Nom = Nom
                        *
ERREUR à la ligne 4 :
ORA-00904: "NOM" : identificateur non valide


SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      VALEUR_pays VARCHAR2
  4          BEGIN
  5              SELECT id_pays, Nom
  6              INTO Valeur_pays
  7              FROM Pays
  8              WHERE Nom = Nom
  9                          ((SELECT Nom
 10                          FROM VILLE
 11                          JOIN Pays
 12                          ON (Vi.Nom= Pa.Nom)
 13                          WHERE (Pa.Nom = Valeur_pays)));
 14          END;
 15  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PAYS" rencontré à la place d'un des
         symboles suivants :
         language

SQL> PROCEDURE AFFICHE_QUARTIER(nom_ville Ville.nom%TYPE) IS
SP2-0734: commande inconnue au début de "PROCEDURE ..." - le reste de la ligne est ignoré.
SQL>     Valeur_ville VARCHAR2
SP2-0734: commande inconnue au début de "Valeur_vil..." - le reste de la ligne est ignoré.
SQL>         BEGIN
  2               SELECT id_ville, nom_quartier
  3              INTO Valeur_ville
  4              FROM VILLE
  5              WHERE nom_ville = nom_ville
  6                                  (SELECT nom_quartier,
  7                                  FROM QUARTIER
  8                                  JOIN VILLE
  9                                  ON (Qu.nom_ville = Vi.nom)
 10                                  WHERE(Vi.no = Valeur_ville));
 11          END;
 12          /
                                (SELECT nom_quartier,
                                 *
ERREUR à la ligne 6 :
ORA-06550: Ligne 6, colonne 34 :
PL/SQL: ORA-00936: expression absente
ORA-06550: Ligne 2, colonne 14 :
PL/SQL: SQL Statement ignored


SQL>  PROCEDURE AFFICHE_QUARTIER(nom_ville Ville.nom%TYPE) IS
SP2-0734: commande inconnue au début de "PROCEDURE ..." - le reste de la ligne est ignoré.
SQL>     Valeur_ville VARCHAR2
SP2-0734: commande inconnue au début de "Valeur_vil..." - le reste de la ligne est ignoré.
SQL>         BEGIN
  2               SELECT id_ville, nom_quartier
  3              INTO Valeur_ville
  4              FROM VILLE
  5              WHERE nom_ville = nom_ville
  6                                  ((SELECT nom_quartier,
  7                                  FROM QUARTIER
  8                                  JOIN VILLE
  9                                  ON (Qu.nom_ville = Vi.nom)
 10                                  WHERE(Vi.no = Valeur_ville)));
 11          END;
 12          /
                                FROM QUARTIER
                                *
ERREUR à la ligne 7 :
ORA-06550: Ligne 7, colonne 33 :
PL/SQL: ORA-00936: expression absente
ORA-06550: Ligne 2, colonne 14 :
PL/SQL: SQL Statement ignored


SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_QUARTIER(nom_ville Ville.nom%TYPE) IS
  3      Valeur_ville VARCHAR2
  4          BEGIN
  5               SELECT id_ville, nom_quartier
  6              INTO Valeur_ville
  7              FROM VILLE
  8              WHERE nom_ville = nom_ville
  9                                  ((SELECT nom_quartier,
 10                                  FROM QUARTIER
 11                                  JOIN VILLE
 12                                  ON (Qu.nom_ville = Vi.nom)
 13                                  WHERE(Vi.no = Valeur_ville)));
 14          END;
 15          /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_VILLE" rencontré à la place d'un des
         symboles suivants :
         language

SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_PRESSING(nom_proprietaire Proprietaire.nom%TYPE) IS
  3      Valeur_proprietaire varchar2
  4          BEGIN
  5               SELECT id_proprietaire, nom_pressing
  6              INTO Valeur_proprietaire
  7              FROM Proprietaire
  8              WHERE nom_proprietaire = nom_proprietaire;
  9                                  ((SELECT nom_pressing
 10                                  FROM PRESSING;
 11                                  JOIN Proprietaire
 12                                  ON (Pres.nom_proprietaire = Pro.nom)
 13                                  WHERE(Pro.nom = Valeur_proprietaire)));
 14          END;
 15  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PROPRIETAIRE" rencontré à la place
         d'un des symboles suivants :
         language

SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      VALEUR_pays VARCHAR2(255);
  4          BEGIN
  5              SELECT id_pays, Nom
  6              INTO Valeur_pays
  7              FROM Pays
  8              WHERE Nom = Nom
  9                          ((SELECT Nom
 10                          FROM VILLE
 11                          JOIN Pays
 12                          ON (Vi.Nom= Pa.Nom)
 13                          WHERE (Pa.Nom = Valeur_pays)));
 14          END;
 15  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PAYS" rencontré à la place d'un des
         symboles suivants :
         language

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES AS
  2      PROCEDURE VERIFIER_AGENCE(Nom_Pressing Pressing.Nom%TYPE,Lieu QUARTIER.nom%TYPE)
  3      IS
  4       Compt PLS_INTEGER:=1;
  5          Cur VARCHAR2(255);
  6          CURSOR Curs IS
  7              SELECT Ag.id
  8              FROM AGENCE Ag
  9              JOIN PRESSING Pr
 10              ON(Ag.id_pressing=Pr.id)
 11              JOIN QUARTIER Qu
 12              ON(Ag.id_quartier=Qu.id)
 13              WHERE (Pr.Nom=Nom_Pressing)
 14              AND
 15              (Qu.nom=Lieu);
 16          Valeur VARCHAR2 (255);
 17          BEGIN
 18              OPEN Curs;
 19              FETCH Curs
 20              INTO Valeur;
 21                  IF Curs%NOTFOUND THEN
 22                      DBMS_OUTPUT.PUT_LINE('agence existe pas');
 23                  ELSE
 24                      DELETE FROM PROMOTION
 25                      WHERE id_agence_Linge=Valeur;
 26                      DELETE FROM OFFRE
 27                      WHERE id_agence_Linge=Valeur;
 28                      DELETE FROM LINGE_AGENCE
 29                      WHERE id_agence=Valeur;
 30                      DELETE FROM SERVICE_AGENCE
 31                      WHERE id_agence=Valeur;
 32                      DELETE FROM COMMANDE
 33                      WHERE id_agence=Valeur;
 34                      DELETE FROM MESSAGE
 35                      WHERE id_agence=Valeur;
 36                      DELETE FROM AGENT
 37                      WHERE id_agence=Valeur;
 38                      DELETE FROM Agence
 39                      WHERE id=Valeur;
 40                      DBMS_OUTPUT.PUT_LINE('agence supprime');
 41                      DBMS_OUTPUT.PUT_LINE('les differences agences du pressing sont: ');
 42                      FOR une_agence IN (
 43                          SELECT Qu.nom "Nom",
 44                          Pr.nom "Nom_pressing"
 45                          FROM QUARTIER Qu
 46                          JOIN AGENCE ag
 47                          ON (ag.id_quartier=Qu.id)
 48                          JOIN PRESSING Pr
 49                          ON(Pr.id=ag.id_pressing)
 50                          WHERE Pr.nom=VERIFIER_AGENCE.Nom_Pressing
 51                      )
 52                      LOOP
 53                      DBMS_OUTPUT.PUT_LINE(Compt ||'- le lieu de l''agence est:'  ||une_agence."Nom");
 54                      Compt :=Compt+1;
 55                      END LOOP;
 56               END IF;
 57              CLOSE Curs;
 58      END VERIFIER_AGENCE ;
 59  END PACK_AGENCES;
 60  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      VALEUR_pays VARCHAR2(255);
  4      Compt PLS_INTEGER:=1;
  5          CURSOR Curs IS
  6              SELECT Pa.id
  7              INTO Valeur_pays
  8              FROM Pays Pa
  9              JOIN Ville Vi
 10              ON(Pa.id_ville=Vi.id)
 11              WHERE (Pa.Nom = Valeur_pays)
 12          Valeur VARCHAR2 (255);
 13          BEGIN
 14          OPEN Curs;
 15              FETCH Curs
 16                  INTO Valeur;
 17                      IF Curs%NOTFOUND THEN
 18                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 19                          FOR une_ville IN(
 20                              SELECT Vi.nom "Nom"
 21                              FROM Ville Vi
 22                              WHERE Vi.nom=.Valeur_pays
 23                              )
 24                              LOOP
 25                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 26                              Compt :=Compt+1;
 27                          END LOOP;
 28                      END IF;
 29          CLOSE Curs;
 30      END AFFICHE_VILLE;
 31  END PACK_AGENCES_CREATION;
 32  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PAYS" rencontré à la place d'un des
         symboles suivants :
         language

SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      VALEUR_pays VARCHAR2(255);
  4      Compt PLS_INTEGER:=1;
  5          CURSOR Curs IS
  6              SELECT id
  7              /*INTO Valeur_pays*/
  8              FROM Pays;
  9  
 10          Valeur VARCHAR2 (255);
 11          BEGIN
 12          OPEN Curs;
 13              FETCH Curs
 14                  INTO Valeur;
 15                      IF Curs%NOTFOUND THEN
 16                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 17                          FOR une_ville IN(
 18                              SELECT Vi.nom "Nom"
 19                              FROM Ville Vi
 20                              WHERE Vi.nom=.Valeur
 21                              )
 22                              LOOP
 23                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 24                              Compt :=Compt+1;
 25                          END LOOP;
 26                      END IF;
 27          CLOSE Curs;
 28      END AFFICHE_VILLE;
 29  END PACK_AGENCES_CREATION;
 30  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PAYS" rencontré à la place d'un des
         symboles suivants :
         language

SQL> SET SERVEROUTPUT ON;
SQL> CREATE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE)
  3  RETURN VARCHAR2;
  4      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE)
  5  RETURN VARCHAR2;
  6      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE)
  7  RETURN VARCHAR2;
  8  END PACK_AGENCES_CREATION;
  9  CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
 10      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
 11      VALEUR_pays VARCHAR2(255);
 12      Compt PLS_INTEGER:=1;
 13          CURSOR Curs IS
 14              SELECT id
 15              /*INTO Valeur_pays*/
 16              FROM Pays;
 17  
 18          Valeur VARCHAR2 (255);
 19          BEGIN
 20          OPEN Curs;
 21              FETCH Curs
 22                  INTO Valeur;
 23                      IF Curs%NOTFOUND THEN
 24                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 25                          FOR une_ville IN(
 26                              SELECT Vi.nom "Nom"
 27                              FROM Ville Vi
 28                              WHERE Vi.nom=Valeur
 29                              )
 30                              LOOP
 31                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 32                              Compt :=Compt+1;
 33                          END LOOP;
 34                      END IF;
 35          CLOSE Curs;
 36      END AFFICHE_VILLE;
 37  END PACK_AGENCES_CREATION;
 38  /
CREATE PACKAGE PACK_AGENCES_CREATION as
               *
ERREUR à la ligne 1 :
ORA-00955: ce nom d'objet existe déjà


SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      VALEUR_pays VARCHAR2(255);
  4      Compt PLS_INTEGER:=1;
  5          CURSOR Curs IS
  6              SELECT id
  7              /*INTO Valeur_pays*/
  8              FROM Pays;
  9  
 10          Valeur VARCHAR2 (255);
 11          BEGIN
 12          OPEN Curs;
 13              FETCH Curs
 14                  INTO Valeur;
 15                      IF Curs%NOTFOUND THEN
 16                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 17                          FOR une_ville IN(
 18                              SELECT Vi.nom "Nom"
 19                              FROM Ville Vi
 20                              WHERE Vi.nom=Valeur
 21                              )
 22                              LOOP
 23                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 24                              Compt :=Compt+1;
 25                          END LOOP;
 26                      END IF;
 27          CLOSE Curs;
 28      END AFFICHE_VILLE;
 29  END PACK_AGENCES_CREATION;
 30  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "VALEUR_PAYS" rencontré à la place d'un des
         symboles suivants :
         language

SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays;
  8          Valeur VARCHAR2 (255);
  9          BEGIN
 10          OPEN Curs;
 11              FETCH Curs
 12                  INTO Valeur;
 13                      IF Curs%NOTFOUND THEN
 14                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 15                          FOR une_ville IN(
 16                              SELECT Vi.nom "Nom"
 17                              FROM Ville Vi
 18                              WHERE Vi.nom=Valeur
 19                              )
 20                              LOOP
 21                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 22                              Compt :=Compt+1;
 23                          END LOOP;
 24                      END IF;
 25          CLOSE Curs;
 26      END AFFICHE_VILLE;
 27  END PACK_AGENCES_CREATION;
 28  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/5      PLS-00103: Symbole "COMPT" rencontré à la place d'un des symboles
         suivants :
         language

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays;
  8          Valeur VARCHAR2 (255);
  9          BEGIN
 10          OPEN Curs;
 11              FETCH Curs
 12                  INTO Valeur;
 13                      IF Curs%NOTFOUND THEN
 14                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 15                          FOR une_ville IN(
 16                              SELECT Vi.nom "Nom"
 17                              FROM Ville Vi
 18                              WHERE Vi.nom=Valeur
 19                              )
 20                              LOOP
 21                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 22                              Compt :=Compt+1;
 23                          END LOOP;
 24                      END IF;
 25          CLOSE Curs;
 26      END AFFICHE_VILLE;
 27  END PACK_AGENCES_CREATION;
 28  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE BODY PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
0/0      PL/SQL: Compilation unit analysis terminated
1/14     PLS-00304: impossible de compiler le corps de
         'PACK_AGENCES_CREATION' sans sa spécification

1/14     PLS-00905: l'objet OPENPRESSING.PACK_AGENCES_CREATION n'est pas
         valide

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE)
  3  RETURN VARCHAR2;
  4      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE)
  5  RETURN VARCHAR2;
  6      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE)
  7  RETURN VARCHAR2;
  8  END PACK_AGENCES_CREATION;
  9  CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
 10      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
 11      Compt PLS_INTEGER:=1;
 12          CURSOR Curs IS
 13              SELECT id
 14              /*INTO Valeur_pays*/
 15              FROM Pays;
 16          Valeur VARCHAR2 (255);
 17          BEGIN
 18          OPEN Curs;
 19              FETCH Curs
 20                  INTO Valeur;
 21                      IF Curs%NOTFOUND THEN
 22                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 23                          FOR une_ville IN(
 24                              SELECT Vi.nom "Nom"
 25                              FROM Ville Vi
 26                              WHERE Vi.nom=Valeur
 27                              )
 28                              LOOP
 29                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 30                              Compt :=Compt+1;
 31                          END LOOP;
 32                      END IF;
 33          CLOSE Curs;
 34      END AFFICHE_VILLE;
 35  END PACK_AGENCES_CREATION;
 36  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/1      PLS-00103: Symbole "RETURN" rencontré à la place d'un des
         symboles suivants :
         ; is with default authid as cluster order using external
         deterministic parallel_enable pipelined result_cache
         accessible sql_macro

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);
  4      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE);
  5  END PACK_AGENCES_CREATION;
  6  CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  7      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  8      Compt PLS_INTEGER:=1;
  9          CURSOR Curs IS
 10              SELECT id
 11              /*INTO Valeur_pays*/
 12              FROM Pays;
 13          Valeur VARCHAR2 (255);
 14          BEGIN
 15          OPEN Curs;
 16              FETCH Curs
 17                  INTO Valeur;
 18                      IF Curs%NOTFOUND THEN
 19                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 20                          FOR une_ville IN(
 21                              SELECT Vi.nom "Nom"
 22                              FROM Ville Vi
 23                              WHERE Vi.nom=Valeur
 24                              )
 25                              LOOP
 26                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 27                              Compt :=Compt+1;
 28                          END LOOP;
 29                      END IF;
 30          CLOSE Curs;
 31      END AFFICHE_VILLE;
 32  END PACK_AGENCES_CREATION;
 33  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
6/1      PLS-00103: Symbole "CREATE" rencontré
SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);
  4      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE);
  5  END PACK_AGENCES_CREATION;
  6  /

Avertissement : Package créé avec erreurs de compilation.

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays;
  8          Valeur VARCHAR2 (255);
  9          BEGIN
 10          OPEN Curs;
 11              FETCH Curs
 12                  INTO Valeur;
 13                      IF Curs%NOTFOUND THEN
 14                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 15                          FOR une_ville IN(
 16                              SELECT Vi.nom "Nom"
 17                              FROM Ville Vi
 18                              WHERE Vi.nom=Valeur
 19                              )
 20                              LOOP
 21                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 22                              Compt :=Compt+1;
 23                          END LOOP;
 24                      END IF;
 25          CLOSE Curs;
 26      END AFFICHE_VILLE;
 27  END PACK_AGENCES_CREATION;
 28  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE BODY PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
0/0      PL/SQL: Compilation unit analysis terminated
1/14     PLS-00304: impossible de compiler le corps de
         'PACK_AGENCES_CREATION' sans sa spécification

1/14     PLS-00905: l'objet OPENPRESSING.PACK_AGENCES_CREATION n'est pas
         valide

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);
  4      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE);
  5  END PACK_AGENCES_CREATION;
  6  /

Avertissement : Package créé avec erreurs de compilation.

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays;
  8          Valeur VARCHAR2 (255);
  9          BEGIN
 10          OPEN Curs;
 11              FETCH Curs
 12                  INTO Valeur;
 13                      IF Curs%NOTFOUND THEN
 14                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 15                          FOR une_ville IN(
 16                              SELECT Vi.nom "Nom"
 17                              FROM Ville Vi
 18                              WHERE Vi.nom=Valeur
 19                              )
 20                              LOOP
 21                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 22                              Compt :=Compt+1;
 23                          END LOOP;
 24                      END IF;
 25          CLOSE Curs;
 26      END AFFICHE_VILLE;
 27  END PACK_AGENCES_CREATION;
 28  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);
  4      PROCEDURE AFFICHE_PRESSING (nom_proprietaire Proprietaire.nom%TYPE);
  5  END PACK_AGENCES_CREATION;
  6  /

Avertissement : Package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
0/0      PL/SQL: Compilation unit analysis terminated
4/63     PLS-00302: Le composant 'NOM' doit être déclaré
SQL> show errors
Erreurs pour PACKAGE PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
0/0      PL/SQL: Compilation unit analysis terminated
4/63     PLS-00302: Le composant 'NOM' doit être déclaré
SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);
  4  END PACK_AGENCES_CREATION;
  5  /

Package créé.

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE(Nom PAYS.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays
  8              WHERE nom = nom_pays;
  9          Valeur VARCHAR2 (255);
 10          BEGIN
 11          OPEN Curs;
 12              FETCH Curs
 13                  INTO Valeur;
 14                      IF Curs%NOTFOUND THEN
 15                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 16                          FOR une_ville IN(
 17                              SELECT Vi.nom "Nom"
 18                              FROM Ville Vi
 19                              WHERE Vi.nom=Valeur
 20                              )
 21                              LOOP
 22                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 23                              Compt :=Compt+1;
 24                          END LOOP;
 25                      END IF;
 26          CLOSE Curs;
 27      END AFFICHE_VILLE;
 28  END PACK_AGENCES_CREATION;
 29  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE BODY PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
2/15     PLS-00323: Sous-programme ou curseur 'AFFICHE_VILLE' déclaré dans
         les spécifications; doit être défini dans le corps.

3/15     PLS-00323: Sous-programme ou curseur 'AFFICHE_QUARTIER' déclaré
         dans les spécifications; doit être défini dans le corps.

5/13     PL/SQL: SQL Statement ignored
8/25     PL/SQL: ORA-00904: "NOM_PAYS" : identificateur non valide
SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays
  8              WHERE nom = nom_pays;
  9          Valeur VARCHAR2 (255);
 10          BEGIN
 11          OPEN Curs;
 12              FETCH Curs
 13                  INTO Valeur;
 14                      IF Curs%NOTFOUND THEN
 15                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 16                          FOR une_ville IN(
 17                              SELECT Vi.nom "Nom"
 18                              FROM Ville Vi
 19                              WHERE Vi.nom=Valeur
 20                              )
 21                              LOOP
 22                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 23                              Compt :=Compt+1;
 24                          END LOOP;
 25                      END IF;
 26          CLOSE Curs;
 27      END AFFICHE_VILLE;
 28  END PACK_AGENCES_CREATION;
 29  /

Avertissement : Corps de package créé avec erreurs de compilation.

SQL> show errors
Erreurs pour PACKAGE BODY PACK_AGENCES_CREATION :

LINE/COL ERROR
-------- -----------------------------------------------------------------
3/15     PLS-00323: Sous-programme ou curseur 'AFFICHE_QUARTIER' déclaré
         dans les spécifications; doit être défini dans le corps.

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      /*PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);*/
  4  END PACK_AGENCES_CREATION;
  5  /

Package créé.

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays
  8              WHERE nom = nom_pays;
  9          Valeur VARCHAR2 (255);
 10          BEGIN
 11          OPEN Curs;
 12              FETCH Curs
 13                  INTO Valeur;
 14                      IF Curs%NOTFOUND THEN
 15                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 16                          FOR une_ville IN(
 17                              SELECT Vi.nom "Nom"
 18                              FROM Ville Vi
 19                              WHERE Vi.nom=Valeur
 20                              )
 21                              LOOP
 22                              DBMS_OUTPUT.PUT_LINE(Compt ||'- le nom de la ville est:'  ||une_ville."Nom");
 23                              Compt :=Compt+1;
 24                          END LOOP;
 25                      END IF;
 26          CLOSE Curs;
 27      END AFFICHE_VILLE;
 28  END PACK_AGENCES_CREATION;
 29  /

Corps de package créé.

SQL> execute PACK_AGENCES_CREATION.AFFICHE_VILLE(Nom_Pays)
BEGIN PACK_AGENCES_CREATION.AFFICHE_VILLE(Nom_Pays); END;

                                          *
ERREUR à la ligne 1 :
ORA-06550: Ligne 1, colonne 43 :
PLS-00201: l'identificateur 'NOM_PAYS' doit être déclaré
ORA-06550: Ligne 1, colonne 7 :
PL/SQL: Statement ignored


SQL> execute PACK_AGENCES_CREATION.AFFICHE_VILLE(Nom_Pays);
BEGIN PACK_AGENCES_CREATION.AFFICHE_VILLE(Nom_Pays); END;

                                          *
ERREUR à la ligne 1 :
ORA-06550: Ligne 1, colonne 43 :
PLS-00201: l'identificateur 'NOM_PAYS' doit être déclaré
ORA-06550: Ligne 1, colonne 7 :
PL/SQL: Statement ignored


SQL> execute PACK_AGENCES_CREATION.AFFICHE_VILLE('&Nom_Pays');
Entrez une valeur pour nom_pays : Cameroun

Procédure PL/SQL terminée avec succès.

SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE PACKAGE PACK_AGENCES_CREATION as
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE);
  3      /*PROCEDURE AFFICHE_QUARTIER (Nom_ville Ville.Nom%TYPE);*/
  4  END PACK_AGENCES_CREATION;
  5  /

Package créé.

SQL> CREATE OR REPLACE PACKAGE BODY PACK_AGENCES_CREATION AS
  2      PROCEDURE AFFICHE_VILLE (Nom_Pays Pays.Nom%TYPE) IS
  3      Compt PLS_INTEGER:=1;
  4          CURSOR Curs IS
  5              SELECT id
  6              /*INTO Valeur_pays*/
  7              FROM Pays
  8              WHERE nom = nom_pays;
  9          Valeur VARCHAR2 (255);
 10          BEGIN
 11          OPEN Curs;
 12              FETCH Curs
 13                  INTO Valeur;
 14                      IF Curs%NOTFOUND THEN
 15                           DBMS_OUTPUT.PUT_LINE('existe pas');
 16                      ELSE
 17                          DBMS_OUTPUT.PUT_LINE('les differences villes du pays selectionnes sont: ');
 18                          FOR une_ville IN(
 19                              SELECT Vi.nom "Nom"
